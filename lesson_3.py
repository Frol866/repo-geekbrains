# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def func_division(var_1, var_2):
    try:
        result = var_1 / var_2
    except ZeroDivisionError:
        return print('Деление на ноль')
    else:
        return result


var_1 = float(input("Введите первое число: "))
var_2 = float(input("Введите второе число: "))

result = func_division(var_1, var_2)
print(result)

# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def func_data_output(phone, email, city, age_birth, family, name):
    print(f'{family} {name}, {age_birth} года рождения, проживающий(ая) в городе {city}, e-mail: {email}, тел.: {phone}')

name = input("Введите имя: ")
family = input("Введите фамилию: ")
age_birth = input("Введите год рождения: ")
city = input("Введите город проживания: ")
email = input("Введите e-mail: ")
phone = input("Введите телефон: ")

func_data_output(name=name, family=family, age_birth=age_birth, city=city, email=email, phone=phone)

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

def my_func(var_1, var_2, var_3):
    list_var = [var_1, var_2, var_3]
    sort_list = sorted(list_var, reverse=True)
    result = sort_list[0] + sort_list[1]
    return result

var_1 = int(input("Введите первое число: "))
var_2 = int(input("Введите второе число: "))
var_3 = int(input("Введите третье число: "))

result = my_func(var_1, var_2, var_3)
print(result)

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.


def my_func_1(x, y):
    result = x**y
    print('Первый способ: ', result)

def my_func_2(x, y):
    i = 1
    result = 1
    while i <= y:
        result = x * result
        i +=1
    print('Второй способ: ', result)

var_1 = int(input("Введите целое положительное число: "))
var_2 = int(input("Введите целое отрицательное число: "))

my_func_1(var_1, var_2)
my_func_2(var_1, var_2)

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

'''Функция суммирования чисел переданных в виде списка'''
def summa_chisel(numbers):

    for i, item in enumerate(numbers):
        numbers[i] = int(item)

    global summa
    summa = 0

    for el in numbers:
        summa += el
    print("Сумма чисел равна: ", summa)
    return summa


print("Программа по подсчету суммы введеных чисел")
print("Нажатие клавиши Enter - сумма введенных чисел")
print("Нажатие клавиши Q - выход из программы")

result = 0
all_results = 0

while True:

    stroka_chisel = input("Введите целые числа через пробел: ")
    if stroka_chisel == 'Q':
        print('Выполнение программы прервано')
        exit()
    else:
        index = stroka_chisel.find('Q') #Поиск символа для завершения программы

        if index != -1:
            list_numbers = stroka_chisel.split(" ")
            length = len(list_numbers) - 1
            new_list_number = list_numbers[:length]
            summa_chisel(new_list_number)
            all_results += summa
            print(f'Общая сумма всех введенных чисел равна: ', all_results)
            print('Выполнение программы прервано')
            exit()


        else:
            list_numbers = stroka_chisel.split(" ")
            summa_chisel(list_numbers)
            all_results += summa
            print(f'Общая сумма всех введенных чисел равна: ', all_results)




# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием.
# В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

# функция перевода первого символа слова в верхний регистр
def int_func(word):
#    word = word[0].upper() + word[1:] *** Перевод первого символа слова в верхний регистр
    word = word.title()
    return word


word = input('Введите слова с маленькой буквы через пробел: ')
print(int_func(word))